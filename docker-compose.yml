# This docker-compose is only to get started with the Sevant Registry.
# It is starting the Registry and a n8n instance, as well as connecting to a Mongodb instance.
# Mongodb is used to save your specifications as well as workflows.

# Go to http://localhost:3000 when started

####################################################################################################
# DO NOT USE IT IN PRODUCTION
####################################################################################################

version: '3.8'

services:
 # MongoDB service
  mongodb:
    image: mongo:5.0
    container_name: sevant-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: sevant
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - sevant-network

  # Backend service
  backend:
    image: analyticsavant/sevant-registry-backend:v20
    container_name: sevant-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/sevant?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGINS: http://localhost:3000,http://frontend:3000
      SWAGGER_API_BASE_URL: https://api.swaggerhub.com/
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    networks:
      - sevant-network
    # volumes:
      # - ./backend/uploads:/app/uploads

  # Frontend service
  frontend:
    image: analyticsavant/sevant-registry-frontend:v20
    container_name: sevant-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - sevant-network

  # Nginx reverse proxy (HTTP only, no SSL)
  nginx:
    image: nginx:alpine
    container_name: sevant-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    # No volume mounts - using default nginx configuration
    # Users can access services directly:
    # - Frontend: http://localhost:3000
    # - Backend: http://localhost:3001
    depends_on:
      - frontend
      - backend
    networks:
      - sevant-network

volumes:
  mongodb_data:

networks:
  sevant-network:
    driver: bridge
